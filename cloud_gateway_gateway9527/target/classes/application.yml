server:
  port: 9527

spring:
  application:
    name: cloud-gateway
  cloud:
    gateway:
      routes:
#        路由的ID名，没有固定规则的要求，但推荐最好和服务名称一致
        - id: payment_route1
#          需要进行匹配并提供服务的路由地址
          uri: http://localhost:8001
          predicates:
#         断言，满足该断言规则的则进行路由
            - Path=/payment/get/**

        - id: payment_route2
          uri: http://localhost:8001
          predicates:
            - Path=/payment/create/**


eureka:
  client:
    #  表示是否将自己注册进EurekaServer，默认为true
    register-with-eureka: true
    #    是否从EurekaServer抓取已有的注册信息，默认为true。单节点无所谓，集群必须设置为true才能配合ribbon使用负载均衡
    fetch-registry: true
    service-url:
      defaultZone: http://eureka7001.com:7001/eureka/,http://eureka7002.com:7002/eureka/
  instance:
    #    自定义EurekaServer端显示当前应用的名称
    instance-id: cloud-gateway-service
    #    将鼠标放置到EurekaServer网页端的注册节点时候会显示当前应用的IP地址信息
    prefer-ip-address: true